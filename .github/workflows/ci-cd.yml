name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # ========================================
  # STAGE 1: LINT (Verificaci√≥n de c√≥digo)
  # ========================================
  lint:
    name: üîç Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar linter
        run: npm run lint || echo "No lint script configurado"

  # ========================================
  # STAGE 2: BUILD (Construcci√≥n)
  # ========================================
  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Verificar TypeScript
        run: npx tsc --noEmit

      - name: Build web
        run: npx expo export --platform web

  # ========================================
  # STAGE 3: TEST (Pruebas)
  # ========================================
  test:
    name: üß™ Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar tests
        run: npm test || echo "No tests configurados a√∫n"

  # ========================================
  # STAGE 4: DEPLOY (Despliegue a producci√≥n)
  # ========================================
  deploy:
    name: üöÄ Deploy a Producci√≥n
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Instalar EAS CLI
        run: npm install -g eas-cli

      - name: Publicar a Expo
        run: |
          npx expo publish --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # Alternativa: Deploy a GitHub Pages (para web)
      - name: Build para web
        run: npx expo export --platform web

      - name: Deploy a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

