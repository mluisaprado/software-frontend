name: Web CI/CD (Expo Web ‚Üí Netlify)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  EXPO_PUBLIC_API_URL: https://software-backend-011n.onrender.com

jobs:
  lint:
    name: üîç Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run lint || echo "No hay script de lint"

  build:
    name: üèóÔ∏è Build Web (Expo Metro)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Instalar dependencias
        run: npm ci

      - name: Instalar Expo CLI
        run: npm install -g expo-cli

      - name: Export web (Expo Metro)
        run: npx expo export --platform web --output-dir dist
        env:
          EXPO_PUBLIC_API_URL: ${{ env.EXPO_PUBLIC_API_URL }}

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: üöÄ Deploy a Netlify (Producci√≥n)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Para obtener historial completo
          
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Instalar Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy con Netlify CLI
        run: |
          netlify deploy --dir=dist --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Mostrar URL final
        run: echo "‚úÖ Sitio publicado en https://santiago-software.netlify.app"

      - name: Crear tag y release autom√°tico
        id: create_release
        run: |
          # Generar versi√≥n basada en fecha
          VERSION="v$(date +'%Y.%m.%d')-$(date +'%H%M')"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Crear tag
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $VERSION -m "Release $VERSION - Deploy autom√°tico"
          git push origin $VERSION
          
          # Generar notas de release
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" -10)
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)")
          fi
          
          # Crear release
          gh release create $VERSION \
            --title "Release $VERSION" \
            --notes "## üöÄ Cambios en esta versi√≥n

          $COMMITS

          **Deploy**: https://santiago-software.netlify.app
          **Fecha**: $(date +'%Y-%m-%d %H:%M:%S')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-preview:
    name: üîÅ Deploy Preview a Netlify (PR / Develop)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Instalar Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy preview con Netlify CLI
        run: |
          netlify deploy --dir=dist
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
